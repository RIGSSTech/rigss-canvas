(window["canvasWebpackJsonp"] = window["canvasWebpackJsonp"] || []).push([[3930],{

/***/ "9UY7":
/*!**************************************************************!*\
  !*** ./packages/js-utils/es/filterUselessConsoleMessages.js ***!
  \**************************************************************/
/*! exports provided: filterUselessConsoleMessages */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"filterUselessConsoleMessages\", function() { return filterUselessConsoleMessages; });\n/*\n * Copyright (C) 2019 - present Instructure, Inc.\n *\n * This file is part of Canvas.\n *\n * Canvas is free software: you can redistribute it and/or modify it under\n * the terms of the GNU Affero General Public License as published by the Free\n * Software Foundation, version 3 of the License.\n *\n * Canvas is distributed in the hope that it will be useful, but WITHOUT ANY\n * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR\n * A PARTICULAR PURPOSE. See the GNU Affero General Public License for more\n * details.\n *\n * You should have received a copy of the GNU Affero General Public License along\n * with this program. If not, see <http://www.gnu.org/licenses/>.\n */\nconst consoleMessagesToIgnore = {\n  error: [// /Failed prop type/, // uncomment if you want to focus on stuff besides propType warnings\n  'Warning: [Focusable] Exactly one tabbable child is required (0 found).', // This is from @instructure/ui-menu, nothing we can do about it ourselves\n  /Function components cannot be given refs\\. Attempts to access this ref will fail[\\s\\S]*in (CanvasInstUIModal|PopoverTrigger)/, /Warning: \\[themeable\\] A theme registry has already been initialized.*/, // from an old discussions edit page\n  /Error: Not implemented: navigation \\(except hash changes\\)/, // Until INSTUI updates FormPropTypes.message\n  // see https://github.com/instructure/instructure-ui/issues/815\n  'Invalid prop `messages[0].text` of type `object` supplied to'],\n  warn: [// Uncomment the following line if all the react 16.9 deprecations are cluttering up\n  // the console and you want to focus on something else\n  // /Please update the following components/,\n  // The build logs have grown to over 250MB so in an interest of being able to use\n  // the build logs at all we're filtering out these general messages.\n  /is deprecated and will be removed/, // '@instructure/ui-select' itself generates this warning, we assume they will figure it out themselves\n  /is experimental and its API could change significantly in a future release/, 'Warning: [Focusable] Exactly one focusable child is required (0 found).', /in Select \\(created by CanvasSelect\\)/, 'created by DateInput', 'created by Editable', // React 16.9+ generates these deprecation warnings but it doesn't do any good to hear about the ones for instUI. We can't do anything about them in this repo\n  // Put any others we can't control here.\n  /Please update the following components:[ (BaseTransition|Billboard|Button|Checkbox|CloseButton|Dialog|Expandable|FileDrop|Flex|FlexItem|FormFieldGroup|FormFieldLabel|FormFieldLayout|FormFieldMessage|FormFieldMessages|Grid|GridCol|GridRow|Heading|InlineSVG|Mask|ModalBody|ModalFooter|ModalHeader|NumberInput|Portal|Query|Responsive|SVGIcon|ScreenReaderContent|SelectOptionsList|SelectField|SelectMultiple|SelectOptionsList|SelectSingle|Spinner|Tab|Text|TextArea|TextInput|TinyMCE|ToggleDetails|ToggleFacade|Transition|TruncateText|View),?]+$/, // output of Pagination component substitutes the component name for the placeholder %s\n  /Please update the following components: %s,Pagination/ // /is deprecated and will be removed/, // uncomment to remove instui deprecation messages\n  // /Translation for/ // uncomment to remove missing translation messages\n  ]\n};\nfunction filterUselessConsoleMessages(originalConsole = console) {\n  Object.keys(consoleMessagesToIgnore).forEach(key => {\n    const original = originalConsole[key];\n\n    originalConsole[key] = function () {\n      const combinedMsg = Array.prototype.join.call(arguments);\n\n      const shouldIgnore = pattern => combinedMsg[typeof pattern === 'string' ? 'includes' : 'match'](pattern);\n\n      if (consoleMessagesToIgnore[key].some(shouldIgnore)) return;\n      return original.apply(this, arguments);\n    };\n  });\n}\n\n//# sourceURL=webpack:///./packages/js-utils/es/filterUselessConsoleMessages.js?");

/***/ })

}]);